version: 2.1

commands:
  setup:
    description: "Set up the repo to work on"
    parameters:
      key:
        type: string
    steps:

      - run:
          name: Install yarn
          command: yarn global add yarn@1.12.3

      - checkout

      - restore_cache:
          keys:
          - v5-dependencies-<< parameters.key >>-{{ checksum "yarn.lock" }}
          - v5-dependencies-<< parameters.key >>-

      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
            - packages/core/node_modules
            - packages/tools/node_modules
          key: v5-dependencies-<< parameters.key >>-{{ checksum "yarn.lock" }}

      - run:
          name: Add npm bin to path
          command: echo 'export PATH="$(npm bin):$PATH"' >> $BASH_ENV

jobs:
  install_macos:
    macos:
      xcode: "9.0"

    working_directory: ~/repo

    # Work around https://github.com/yarnpkg/yarn/issues/2423
    steps:
      - checkout

      - run:
          name: Install yarn
          command: yarn global add yarn@1.12.3

      - restore_cache:
          keys:
          - v5-dependencies-macos-{{ checksum "yarn.lock" }}
          - v5-dependencies-macos-

      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile || yarn

      - save_cache:
          paths:
            - node_modules
            - packages/core/node_modules
            - packages/tools/node_modules
          key: v5-dependencies-macos-{{ checksum "yarn.lock" }}

      - run:
          name: Add npm bin to path
          command: echo 'export PATH="$(npm bin):$PATH"' >> $BASH_ENV

  test:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - run:
          name: Run unit tests
          command: yarn jest --maxWorkers 4

  lint:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - run:
          lint: Lint code
          command: lerna run lint --stream

  compile:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - run:
          name: Compile with tsc
          command: yarn tsc -b -v

      - persist_to_workspace:
          root: ~/repo
          paths:
              - packages/core/lib
              - packages/essentials/lib
              - packages/loader/lib
              - packages/site/lib

  ncc:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - attach_workspace:
          at: ~/repo

      - run:
          name: Compile with ncc
          command: lerna run compile:ncc --stream

      - persist_to_workspace:
          root: ~/repo
          paths:
              - packages/core/nccbuild

  bundle:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - attach_workspace:
          at: ~/repo

      - run:
          name: Create browser scripts
          command: yarn webpack

      - persist_to_workspace:
          root: ~/repo
          paths:
              - packages/core/build/scripts

  static:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - attach_workspace:
          at: ~/repo

      - run:
          name: Create static build
          command: lerna run static --stream

      - run:
          name: Deploy to static hosting
          command: alva-deploy --prefix=alva --project packages/core/.static

  trigger:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - run:
          name: Trigger Release
          command: alva-trigger --project packages/core

      - persist_to_workspace:
          root: ~/repo
          paths:
              - packages/core/package.ncc.json

  macos:
    macos:
      xcode: "9.0"

    working_directory: ~/repo

    steps:
      - setup:
          key: macos

      - attach_workspace:
          at: ~/repo

      - run:
          name: Copy Scripts
          command: lerna run copy:scripts

      - run:
          name: Publish Release
          command: alva-release --project packages/core/nccbuild

  linux:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - attach_workspace:
          at: ~/repo

      - run:
          name: Copy Scripts
          command: lerna run copy:scripts

      - run:
          name: Publish Release
          command: alva-release --project packages/core/nccbuild

  windows:
    docker:
      - image: electronuserland/builder:wine

    working_directory: ~/repo

    steps:
      - setup:
          key: windows

      - attach_workspace:
          at: ~/repo

      - run:
          name: Copy Scripts
          command: lerna run copy:scripts

      - run:
          name: Publish Release
          command: alva-release --project packages/core/nccbuild -- --win

  site:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - run:
          name: Remove dev data
          command: rm packages/site/src/releases-data.ts

      - run:
          name: Fetch release data
          command: alva-trigger --dry-run --project=packages/core --data=packages/site/src/releases-data.ts && cat packages/site/src/releases-data.ts

      - run:
          name: Create static site
          command: lerna run build --scope=@meetalva/site --stream

      - run:
          name: Deploy to static hosting
          command: alva-deploy --prefix=alva-site --project packages/site/.static

  site_master:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - run:
          name: Remove dev data
          command: rm packages/site/src/releases-data.ts

      - run:
          name: Fetch release data
          command: alva-trigger --dry-run --project=packages/core --data=packages/site/src/releases-data.ts && cat packages/site/src/releases-data.ts

      - run:
          name: Compile site
          command: lerna run compile --scope=@meetalva/site --stream

      - run:
          name: Create static site
          command: lerna run build --scope=@meetalva/site --stream

      - run:
          name: Deploy to static hosting
          command: surge packages/site/.static https://meetalva.io

workflows:
  version: 2
  build:
    jobs:
      - trigger
      - install_macos
      - lint
      - compile
      - test:
          requires:
            - compile
      - bundle:
          requires:
            - compile
      - site:
          requires:
            - compile
            - macos
            - linux
            - windows
          filters:
             branches:
                ignore:
                   - master
      - site_master:
          requires:
            - compile
            - macos
            - linux
            - windows
          filters:
             branches:
                only:
                   - master
      - ncc:
          requires:
            - trigger
            - compile
      - static:
          requires:
            - test
            - lint
            - compile
            - bundle
      - macos:
          requires:
            - install_macos
            - test
            - lint
            - ncc
            - bundle
      - linux:
          requires:
            - test
            - lint
            - ncc
            - bundle
      - windows:
          requires:
            - test
            - lint
            - ncc
            - bundle
