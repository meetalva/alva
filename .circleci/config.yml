version: 2.1

commands:
  setup:
    description: "Set up the repo to work on"
    parameters:
      key:
        type: string
    steps:
      - checkout

      - restore_cache:
          keys:
          - v4-dependencies-<< parameters.key >>-{{ checksum "yarn.lock" }}
          - v4-dependencies-<< parameters.key >>-

      - run:
          name: Install dependencies
          command: yarn

      - save_cache:
          paths:
            - node_modules
            - packages/core/node_modules
            - packages/tools/node_modules
          key: v4-dependencies-<< parameters.key >>-{{ checksum "yarn.lock" }}

      - run:
          name: Add npm bin to path
          command: echo 'export PATH="$(npm bin):$PATH"' >> $BASH_ENV

  trigger:
    description: "Trigger an appropriate release"

    steps:
      - run:
          name: Trigger Release
          command: alva-trigger --project packages/core

jobs:
  install_macos:
    macos:
      xcode: "9.0"

    working_directory: ~/repo

    # Work around https://github.com/yarnpkg/yarn/issues/2423
    steps:
      - checkout

      - restore_cache:
          keys:
          - v4-dependencies-macos-{{ checksum "yarn.lock" }}
          - v4-dependencies-macos-

      - run:
          name: Install dependencies
          command: yarn || yarn

      - save_cache:
          paths:
            - node_modules
            - packages/core/node_modules
            - packages/tools/node_modules
          key: v4-dependencies-macos-{{ checksum "yarn.lock" }}

      - run:
          name: Add npm bin to path
          command: echo 'export PATH="$(npm bin):$PATH"' >> $BASH_ENV

  test:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - run: lerna run test --stream

  lint:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - run:
          lint: Lint code
          command: lerna run lint --stream

  compile:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - run: lerna run compile --stream

      - persist_to_workspace:
          root: packages/core
          paths:
              - build

  bundle:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - run: lerna run bundle --stream

      - persist_to_workspace:
          root: packages/core
          paths:
              - build

  static:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - attach_workspace:
          at: packages/core

      - run: lerna run static --stream
      - run: alva-deploy --project packages/core/.static

  macos:
    macos:
      xcode: "9.0"

    working_directory: ~/repo

    steps:
      - setup:
          key: macos

      - attach_workspace:
          at: packages/core

      - trigger

      - run:
          name: Publish Release
          command: lerna run release --stream

  linux:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - setup:
          key: linux

      - attach_workspace:
          at: packages/core

      - trigger

      - run:
          name: Publish Release
          command: lerna run release --stream

  windows:
    docker:
      - image: electronuserland/builder:wine

    working_directory: ~/repo

    steps:
      - setup:
          key: windows

      - attach_workspace:
          at: packages/core

      - trigger

      - run:
          name: Publish Release
          command: lerna run release --stream -- --win

workflows:
  version: 2
  build:
    jobs:
      - install_macos
      - test
      - lint
      - bundle
      - compile
      - static:
          requires:
              - test
              - lint
              - compile
              - bundle
      - macos:
          requires:
              - install_macos
              - test
              - lint
              - compile
              - bundle
      - linux:
          requires:
              - test
              - lint
              - compile
              - bundle
      - windows:
          requires:
              - test
              - lint
              - compile
              - bundle
